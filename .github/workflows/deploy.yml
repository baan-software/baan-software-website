name: Build and Deploy

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Type check
        run: yarn type-check

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
  
  check-secrets:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Check deployment secrets
        run: |
          if [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" || -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" || -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]]; then
            echo "‚ö†Ô∏è  Deployment skipped: AWS secrets not configured"
            echo "‚ÑπÔ∏è  To enable deployment, configure the following repository secrets:"
            echo "   - AWS_ACCESS_KEY_ID"
            echo "   - AWS_SECRET_ACCESS_KEY" 
            echo "   - CLOUDFRONT_DISTRIBUTION_ID"
            echo "üìñ See README.md for more details"
          else
            echo "‚úÖ All deployment secrets are configured"
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    env:
      S3_BUCKET_NAME: baan-software-website
      AWS_REGION: us-east-1
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ env.S3_BUCKET_NAME }} --delete --cache-control "public, max-age=31536000"
          aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/index.html s3://${{ env.S3_BUCKET_NAME }}/index.html --cache-control "public, max-age=0, must-revalidate" --metadata-directive REPLACE --content-type "text/html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" 